import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output
import dash_bootstrap_components as dbc
import pandas as pd
import dash_table
from app import app
df_bpso = pd.read_csv('../output/dataMining/BPSO_ar.csv')


layout=html.Div(children=[
        dbc.Row(html.H1('Binary Particle Swarm Optimization',style={
            'text-align' : 'center'

        },className="mx-auto mt-20"))
        ,
        html.Hr()
        ,
        dbc.Row(html.H2('rule generated by BPSO',style={
            'text-align' : 'center'

        },className="mx-auto mt-20")),
         html.Hr(),
        dbc.Row([
            dbc.Col(dbc.Card(
              [
                  
                   dbc.CardBody(
                    [
                        html.H4(str(round(df_bpso['confidence'].max(),2)), className="card-title"),
                        html.P("best confidence", className="card-text"),
                    ]
                ),
                
                    ],color="info", outline=True
            
            )),
            dbc.Col(dbc.Card(
              [
                  
                   dbc.CardBody(
                    [
                        html.H4(str(round(df_bpso['lift'].max(),2)), className="card-title"),
                        html.P("best lift", className="card-text"),
                    ]
                ),
                
                    ],color="info", outline=True
            
            )),
            dbc.Col(dbc.Card(
              [
                  
                   dbc.CardBody(
                    [
                        html.H4(str(round(df_bpso['leverage'].max(),3)), className="card-title"),
                        html.P("best leverage", className="card-text"),
                    ]
                ),
                
                    ],color="info", outline=True
            
            )),
            dbc.Col(dbc.Card(
              [
                  
                   dbc.CardBody(
                    [
                        html.H4(str(round(df_bpso['conviction'].max(),2)), className="card-title"),
                        html.P("best conviction", className="card-text"),
                    ]
                ),
                
                    ],color="info", outline=True
            
            ))
            ]),
            html.Hr()
            ,


        html.Div(dash_table.DataTable(
        id='datatable-paging',
        columns=[{"name": i, "id": i} for i in df_bpso.columns],
        data=df_bpso.to_dict("records"),
        editable=False,
        filter_action="native",
        sort_action="native",
        sort_mode="multi",
        page_action="native",
        page_current= 0,
        page_size= 10,
        style_data_conditional=[
        {
            'if': {'row_index': 'odd'},
            'backgroundColor': 'rgb(248, 248, 248)'
        }
        ],
        style_header={
        'backgroundColor': 'rgb(230, 230, 230)',
        'fontWeight': 'bold'
        }
    )),

      ])